---
import type { CollectionEntry } from "astro:content";
import FormattedDate from "@/components/FormattedDate.astro";
import type { HTMLTag, Polymorphic } from "astro/types";

type Props<Tag extends HTMLTag> = Polymorphic<{ as: Tag }> & {
	post: CollectionEntry<"post">;
	withDesc?: boolean;
};

const { as: Tag = "div", post, withDesc = false } = Astro.props;
---

<!-- 现代化文章预览卡片 -->
<div class="flex flex-col h-full">
	<!-- 文章标题和状态 -->
	<div class="flex-1">
		<Tag class="block">
			{post.data.draft && <span class="inline-flex items-center px-2 py-1 text-xs font-medium bg-red-100 text-red-800 rounded-full mb-2">📝 草稿</span>}
			<a 
				class="block text-xl font-bold mb-3 bg-gradient-to-r from-gray-900 to-gray-700 dark:from-white dark:to-gray-300 bg-clip-text text-transparent hover:from-blue-600 hover:to-purple-600 smooth-transition" 
				data-astro-prefetch 
				href={`/posts/${post.id}/`}
			>
				{post.data.title}
			</a>
		</Tag>
		
		<!-- 文章描述 -->
		{withDesc && (
			<p class="text-gray-600 dark:text-gray-400 line-clamp-3 mb-4 leading-relaxed">
				{post.data.description}
			</p>
		)}
	</div>
	
	<!-- 日期和标签 -->
	<div class="flex items-center justify-between pt-4 border-t border-gray-200 dark:border-gray-700">
		<FormattedDate
			class="flex items-center text-sm font-medium text-gray-500 dark:text-gray-400"
			date={post.data.publishDate}
		/>
		<div class="flex items-center space-x-2">
			<span class="text-xs text-gray-400">🕰️</span>
			<span class="text-xs text-gray-500 dark:text-gray-400">3 分钟阅读</span>
		</div>
	</div>
</div>
