---
import Search from "@/components/Search.astro";
import ThemeToggle from "@/components/ThemeToggle.astro";
import { menuLinks } from "@/site.config";
---

<header class="group relative mb-16 flex items-center sm:ps-[4.5rem]" id="main-header">
	<div class="flex sm:flex-col">
		<a
			aria-current={Astro.url.pathname === "/" ? "page" : false}
			class="inline-flex items-center group sm:relative sm:inline-block"
			href="/"
		>
			<!-- 自定义头像图片 -->
			<img
				src="/116414193.jpg"
				alt="我的头像"
				title="欢迎来到我的博客！"
				class="me-3 h-10 w-10 sm:absolute sm:start-[-4.5rem] sm:me-0 sm:h-16 sm:w-16 rounded-full object-cover transition-all duration-700 ease-in-out transform group-hover:scale-110 group-hover:rotate-12 group-hover:saturate-150 avatar-glow"
				style="filter: brightness(1);"
			/>
			<!-- 修改：首页标题 -->
			<span class="text-xl font-bold sm:text-2xl transition-all duration-300 group-hover:text-blue-400 group-hover:scale-105">motto的博客</span>
		</a>
		<nav
			aria-label="Main menu"
			class="absolute -inset-x-4 top-14 hidden flex-col items-end gap-y-4 rounded-md bg-bgColor/[.85] py-4 text-accent shadow backdrop-blur group-[.menu-open]:z-50 group-[.menu-open]:flex sm:static sm:z-auto sm:-ms-4 sm:mt-1 sm:flex sm:flex-row sm:items-center sm:divide-x sm:divide-accent sm:rounded-none sm:bg-transparent sm:py-0 sm:shadow-none sm:backdrop-blur-none"
			id="navigation-menu"
		>
			{
				menuLinks.map((link) => (
					<a
						aria-current={Astro.url.pathname === link.path ? "page" : false}
						class="px-4 py-4 underline-offset-2 sm:py-0 sm:hover:underline"
						data-astro-prefetch
						href={link.path}
					>
						{link.title}
					</a>
				))
			}
		</nav>
	</div>
	<Search />
	<ThemeToggle />
	<mobile-button>
		<button
			aria-expanded="false"
			aria-haspopup="menu"
			aria-label="Open main menu"
			class="group relative ms-4 h-7 w-7 sm:invisible sm:hidden"
			id="toggle-navigation-menu"
			type="button"
		>
			<svg
				aria-hidden="true"
				class="absolute start-1/2 top-1/2 h-full w-full -translate-x-1/2 -translate-y-1/2 transition-all group-aria-expanded:scale-0 group-aria-expanded:opacity-0"
				fill="none"
				focusable="false"
				id="line-svg"
				stroke="currentColor"
				stroke-width="1.5"
				viewBox="0 0 24 24"
				xmlns="http://www.w3.org/2000/svg"
			>
				<path d="M3.75 9h16.5m-16.5 6.75h16.5" stroke-linecap="round" stroke-linejoin="round"
				></path>
			</svg>
			<svg
				aria-hidden="true"
				class="absolute start-1/2 top-1/2 h-full w-full -translate-x-1/2 -translate-y-1/2 scale-0 text-accent opacity-0 transition-all group-aria-expanded:scale-100 group-aria-expanded:opacity-100"
				class="text-accent"
				fill="none"
				focusable="false"
				id="cross-svg"
				stroke="currentColor"
				stroke-width="1.5"
				viewBox="0 0 24 24"
				xmlns="http://www.w3.org/2000/svg"
			>
				<path d="M6 18L18 6M6 6l12 12" stroke-linecap="round" stroke-linejoin="round"></path>
			</svg>
		</button>
	</mobile-button>
</header>

<style>
	/* 头像光环渐变效果 */
	.avatar-glow {
		position: relative;
		box-shadow: 
			0 0 0 0 rgba(59, 130, 246, 0),
			0 0 0 0 rgba(59, 130, 246, 0),
			0 0 20px rgba(59, 130, 246, 0.1);
		transition: all 0.7s cubic-bezier(0.4, 0, 0.2, 1);
	}
	
	.avatar-glow::before {
		content: '';
		position: absolute;
		top: -4px;
		left: -4px;
		right: -4px;
		bottom: -4px;
		border-radius: 50%;
		background: conic-gradient(from 0deg, 
			rgba(59, 130, 246, 0.8), 
			rgba(147, 197, 253, 0.6),
			rgba(59, 130, 246, 0.4),
			rgba(29, 78, 216, 0.6),
			rgba(59, 130, 246, 0.8)
		);
		opacity: 0;
		filter: blur(8px);
		transition: all 0.7s cubic-bezier(0.4, 0, 0.2, 1);
		z-index: -1;
		animation: rotate 4s linear infinite;
	}
	
	.avatar-glow::after {
		content: '';
		position: absolute;
		top: -2px;
		left: -2px;
		right: -2px;
		bottom: -2px;
		border-radius: 50%;
		background: radial-gradient(circle, 
			rgba(59, 130, 246, 0.6) 0%, 
			rgba(59, 130, 246, 0.3) 40%,
			rgba(59, 130, 246, 0.1) 70%,
			transparent 100%
		);
		opacity: 0;
		transition: all 0.7s cubic-bezier(0.4, 0, 0.2, 1);
		z-index: -1;
	}
	
	/* 悬停时的效果 */
	group:hover .avatar-glow {
		box-shadow: 
			0 0 20px 4px rgba(59, 130, 246, 0.4),
			0 0 40px 8px rgba(59, 130, 246, 0.2),
			0 0 80px 16px rgba(59, 130, 246, 0.1);
		animation: breathe 2s ease-in-out infinite;
	}
	
	group:hover .avatar-glow::before {
		opacity: 1;
		filter: blur(12px);
	}
	
	group:hover .avatar-glow::after {
		opacity: 1;
	}
	
	/* 旋转动画 */
	@keyframes rotate {
		from {
			transform: rotate(0deg);
		}
		to {
			transform: rotate(360deg);
		}
	}
	
	/* 呼吸亮度效果 */
	@keyframes breathe {
		0% {
			filter: brightness(1.1) saturate(1.5);
		}
		50% {
			filter: brightness(1.25) saturate(1.8);
		}
		100% {
			filter: brightness(1.05) saturate(1.4);
		}
	}
</style>

<script>
	import { toggleClass } from "@/utils/domElement";

	class MobileNavBtn extends HTMLElement {
		#menuOpen: boolean = false;

		connectedCallback() {
			const headerEl = document.getElementById("main-header")!;
			const mobileButtonEl = this.querySelector<HTMLButtonElement>("button");

			mobileButtonEl?.addEventListener("click", () => {
				if (headerEl) toggleClass(headerEl, "menu-open");
				this.#menuOpen = !this.#menuOpen;
				mobileButtonEl.setAttribute("aria-expanded", this.#menuOpen.toString());
			});
		}
	}

	customElements.define("mobile-button", MobileNavBtn);
</script>